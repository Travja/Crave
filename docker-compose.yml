version: '3.9'

# Some basic configuration here,
# when deployed, REGISTRY_HOST should point to
# the Eureka registry service.
# The database env variables are straight forward.
#
# Since the front-end is pre-compiled, not compiled at
# runtime due to possible load-balancing issues, the
# image should be built with appropriate .env
# configuration as described below. If being deployed
# from this file, no modification should be necessary.
#
#
# IT IS IMPORTANT TO NOTE:
# This configuration is designed to be run all contained
# on a single machine. (executed by the docker.sh script)
# Any modification to this process goes beyond the
# scope of this file and care must be taken
# appropriately.

services:
  crave-mysql:
    image: mysql
    container_name: crave-mysql
    cap_add:
      - SYS_NICE  # CAP_SYS_NICE
    ports:
      - "3307:3306"
    env_file:
      - .env
    environment:
      MYSQL_ROOT_PASSWORD: ${DATABASE_PASSWORD}
      MYSQL_DATABASE: ${DATABASE_NAME}
      MYSQL_USER: ${DATABASE_USERNAME}
      MYSQL_PASSWORD: ${DATABASE_PASSWORD}
    volumes:
      - ./.data/mysql:/var/lib/mysql
    networks:
      - crave

  eureka-server:
    container_name: eureka-server
    build:
      context: ./services/eureka-server
    ports:
      - "8761:8761"
    networks:
      - crave

  cloud-gateway:
    build:
      context: ./services/cloud-gateway
    container_name: cloud-gateway
    depends_on:
      - eureka-server
    restart: always
    ports:
      - "80:8080"
    expose:
      - 8080
    env_file:
      - .env
    environment:
      - SERVER_PORT=8080
      - APP_NAME=gateway-service
    networks:
      - crave

  auth-service:
    build:
      context: ./services/auth/auth-server
    depends_on:
      - crave-mysql
    restart: always
    ports:
      - "9000:9000"
    env_file:
      - .env
    environment:
      - SERVER_PORT=9000
      - APP_NAME=auth-service
    networks:
      - crave
    mem_limit: 450m
  #    scale: 2

  item-service:
    #    profiles: ["services"]
    build:
      context: ./services/item-service
    depends_on:
      - crave-mysql
      - eureka-server
    restart: always
    #    ports:
    #      - 8082:8080
    expose:
      - 8080
    env_file:
      - .env
    environment:
      - SERVER_PORT=8080
      - APP_NAME=item-service
    networks:
      - crave
    mem_limit: 450m
  #    scale: 2

  receipt-service:
    #    profiles: ["services"]
    build:
      context: ./services/receipt-service
    depends_on:
      - crave-mysql
      - eureka-server
    restart: always
    env_file:
      - .env
    environment:
      - SERVER_PORT=8080
      - APP_NAME=receipt-service
    networks:
      - crave
    mem_limit: 450m
  #    scale: 2

  # To set the gateway location used by the front-end,
  # create a .env file in the base dir
  # and include 'VITE_GATEWAY=uri'.
  # The gateway will default to window.location.origin
  # if not included.
  # This would enable the front-end to run independent
  # of the rest of the docker network, but still
  # access the API behind the cloud gateway.
  # As such, this should be the PUBLIC access point.
  # No 'cloud-gateway:8080'. In a deployed scenario,
  # this would not be the internal IP either. This
  # would be the WAN address for the cloud gateway.
  web-server:
    #    profiles: ["services"]
    build:
      context: ./web
    #    container_name: web-server
    depends_on:
      - crave-mysql
      - item-service
      - cloud-gateway
      - eureka-server
    restart: always
    env_file:
      - .env
    environment:
      - SERVER_PORT=3000
      - APP_NAME=web-server
    ports:
      - "3000:3000"
    networks:
      - crave
#    scale: 2

networks:
  crave:
    name: Crave Network
